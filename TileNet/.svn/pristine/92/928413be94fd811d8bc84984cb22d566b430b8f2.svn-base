package com.putable.tilenet.Client;

import java.io.IOException;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import com.putable.tilenet.Server.ServerModel;
import com.putable.tilenet.Util.XMLTags.SetTag;
import com.putable.tilenet.factory.MatrixElementBuilder;
import com.putable.tilenet.factory.TileNetMatrixElementBuilder;

public class Client {
	private JFrame frame;
	private final static int PORT = 44455;
	private Agent agent;
	private ServerModel connectedTo;

	public Client(Agent agent) {

	}

	public boolean validateServerStatus(String serverStatus) {
		if (serverStatus.equals("open")) {
			return true;
		} else if (serverStatus.equals("closed")) {
			JOptionPane.showMessageDialog(null, "This server is "
					+ "closed please try again later.");
			return false;
		} else {
			JOptionPane.showMessageDialog(null, "This server is busy"
					+ " please try again later.");
			return false;
		}

	}

	public void startSession() {
		
	}

	/*
	 * TODO add GUI
	 */
	public static void main(String[] args) throws IOException {
		String hostName = JOptionPane.showInputDialog(null, "Enter Hostname:");

		MatrixElementBuilder makeElements = new TileNetMatrixElementBuilder();
		com.putable.tilenet.factory.MatrixElement agent = makeElements
				.orderElement("AGENT");
		agent = (com.putable.tilenet.factory.Agent) agent;

		try {
			agent.getConn().connect(hostName, PORT);
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Cannot connect to: "
					+ hostName);
			return;
		}
		

		String agentName = JOptionPane.showInputDialog(null, "Agent name:");
		agent.setName(agentName);

		
		
	}

}
