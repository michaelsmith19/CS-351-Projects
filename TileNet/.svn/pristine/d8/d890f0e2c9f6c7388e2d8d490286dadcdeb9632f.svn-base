package com.putable.tilenet.matrix;

import java.io.IOException;
import java.net.UnknownHostException;
import java.util.Arrays;
import java.util.List;

import com.putable.tilenet.Client.Agent;
import com.putable.tilenet.Client.AutoAgent;

public class MatrixElementFactory{	

	private MatrixElementFactory(){
	}

	public static MatrixElement produce(ElemType type, String... args ){
		try {
			return type.get(args);
		} catch (UnknownHostException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;		
	}

	public enum ElemType {
		AGENT {
			@Override
			MatrixElement get(String... args) throws UnknownHostException, IOException {				
				List<String> parameters = Arrays.asList(args);
				//TODO add exception handling for parameter arguments
				return new Agent(parameters.get(0), Integer.parseInt(parameters.get(1)));
			}			
		},
		AUTOAGENT {
			@Override
			MatrixElement get(String... args) throws UnknownHostException, IOException {
				List<String> parameters = Arrays.asList(args);
				return new AutoAgent(parameters.get(0), Integer.parseInt(parameters.get(1)), parameters.subList(2, parameters.size()));
			}
			
		},
		KEY {
			@Override
			MatrixElement get(String... args) {
				return new Key();
			}
		},
		TOKEN {
			@Override
			MatrixElement get(String... args) {
				return new Token();
			}
		},
		IMAGE {
			@Override
			MatrixElement get(String... args) {				
				return new Image();
			}
		},
		MATRIX {
			@Override
			MatrixElement get(String... args) {
				return new Matrix();
			}
		};

		/**Creates a {@link MatrixElement}
		 * @param args <br>
		 * 		1. parameters for {@link Agent} (String name, int port) 
		 * @return
		 * @throws UnknownHostException
		 * @throws IOException
		 */
		abstract MatrixElement get(String... args) throws UnknownHostException, IOException;
	}
}






