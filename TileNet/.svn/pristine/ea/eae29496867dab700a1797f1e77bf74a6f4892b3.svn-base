package com.putable.tilenet.layout;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.util.List;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentLinkedQueue;

import javax.swing.ImageIcon;
import javax.swing.JPanel;

import com.putable.tilenet.Util.XMLTags.SetTag;
import com.putable.tilenet.blueprints.Element;
import com.putable.tilenet.blueprints.Layout;
import com.putable.tilenet.matrixelement.Agent;
import com.putable.tilenet.matrixelement.Matrix;

public class HomeLayout implements Layout {	
	private Matrix m;
	private ConcurrentHashMap<Point, Element> grid;
	private ConcurrentLinkedQueue<Agent> agents;
	
	@Override
	public JPanel toJPanel(int height, int width) {
		if(grid == null)
			System.err.println("NOTHING TO SHOW");
		
		Element e;		
		JPanel panel = new JPanel();
		
		panel.setSize(width, height);
		panel.setLayout(new GridBagLayout());
		GridBagConstraints c = new GridBagConstraints();
		c.fill = GridBagConstraints.BOTH;
		for(Point p: grid.keySet()){
			e = grid.get(p);
			ImageIcon icon = new ImageIcon(new BufferedImage(m.));
		}
		
		return null;
	}

	@Override
	public List<SetTag> toSetTags() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void put(SetTag tag) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void associate(Matrix m) {
		this.m = m;		
	}

}
